name: Java CI with Gradle + Allure

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t gradle-tests .

      - name: Run tests and generate Allure report
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/build:/app/build \
            -w /app \
            gradle-tests \
            ./gradlew test allureReport

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: build/reports/allure-report
          retention-days: 5

  deploy-allure:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Download Allure artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Prepare deploy folder
        run: |
          mkdir -p gh-pages/reports/${{ github.run_number }}
          cp -r allure-report/* gh-pages/reports/${{ github.run_number }}

          # Crear o actualizar el dashboard (index.html)
          DASHBOARD=gh-pages/index.html
          echo "<html><head><title>Allure Reports Dashboard</title></head><body>" > $DASHBOARD
          echo "<h1>Allure Reports Dashboard</h1><ul>" >> $DASHBOARD
          for dir in $(ls gh-pages/reports); do
            echo "<li><a href='reports/$dir/index.html'>Report $dir</a></li>" >> $DASHBOARD
          done
          echo "</ul></body></html>" >> $DASHBOARD

      - name: Deploy Allure reports and dashboard
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          keep_files: true
