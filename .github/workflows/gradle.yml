name: Java CI with Gradle + Allure

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t gradle-tests .

      - name: Run tests and generate Allure report
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/build:/app/build \
            -w /app \
            gradle-tests \
            ./gradlew test allureReport

      - name: Upload Allure Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: build/reports/allure-report
          retention-days: 5

  deploy-allure:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ðŸ‘ˆ Trae todo el historial
          ref: gh-pages    # ðŸ‘ˆ Chequea la rama gh-pages, no main

      - name: Download Allure artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

      - name: Prepare deploy folder
        run: |
          mkdir -p reports/${{ github.run_number }}
          cp -r allure-report/* reports/${{ github.run_number }}

          # === Metadata de la ejecuciÃ³n ===
          RUN=${{ github.run_number }}
          SHA=${{ github.sha }}
          MSG="${{ github.event.head_commit.message }}"
          AUTHOR="${{ github.event.head_commit.author.name }}"
          DATE=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

          META_FILE=metadata.json

          # Si no existe metadata.json lo creamos
          if [ ! -f $META_FILE ]; then
            echo "[]" > $META_FILE
          fi

          # Agregar el registro al JSON
          tmp=$(mktemp)
          jq ". + [{\"run\": \"$RUN\", \"sha\": \"$SHA\", \"msg\": \"$MSG\", \"author\": \"$AUTHOR\", \"date\": \"$DATE\", \"link\": \"reports/$RUN/index.html\"}]" $META_FILE > "$tmp" && mv "$tmp" $META_FILE

          # === Generar dashboard con Bootstrap ===
          DASHBOARD=index.html
          cat > $DASHBOARD <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Allure Reports Dashboard</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
          </head>
          <body class="bg-light">
            <div class="container py-5">
              <h1 class="mb-4 text-center">ðŸ“Š Allure Reports Dashboard</h1>
              <div id="reports" class="row g-4"></div>
            </div>

            <script>
              fetch('metadata.json')
                .then(r => r.json())
                .then(data => {
                  const container = document.getElementById('reports');
                  data.reverse().forEach(item => {
                    const card = document.createElement('div');
                    card.className = 'col-md-6 col-lg-4';
                    card.innerHTML = `
                      <div class="card shadow-sm h-100">
                        <div class="card-body">
                          <h5 class="card-title">Run #${item.run}</h5>
                          <p class="card-text"><strong>Commit:</strong> ${item.sha.substring(0,7)}<br>
                          <strong>Message:</strong> ${item.msg}<br>
                          <strong>Author:</strong> ${item.author}<br>
                          <strong>Date:</strong> ${item.date}</p>
                          <a href="${item.link}" class="btn btn-primary" target="_blank">View Report</a>
                        </div>
                      </div>`;
                    container.appendChild(card);
                  });
                });
            </script>
          </body>
          </html>
          EOF

      - name: Deploy Allure reports and dashboard
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          keep_files: true