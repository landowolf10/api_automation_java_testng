plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

def allureVersion = "2.29.1"
def aspectJVersion = "1.9.20.1"

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.testng:testng:7.10.2'
    testImplementation "org.testng:testng:7.10.2"

    implementation "io.rest-assured:rest-assured:5.4.0"
    implementation "io.rest-assured:json-schema-validator:5.4.0"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.17.1"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-testng"

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    implementation "com.aventstack:extentreports:5.1.2"
}

test {
    useTestNG() {
        testLogging.showStandardStreams = true
        useDefaultListeners = true
        jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
        systemProperty "allure.results.directory", "$buildDir/allure-results"

        def suiteFile = System.getProperty("suiteXmlFile")
        if (suiteFile != null) {
            println "Executing suite: $suiteFile"
            suites suiteFile
        } else {
            println "No suiteXmlFile specified, executing default tests (all tests)."
        }
    }
    ignoreFailures = true
}

tasks.register('allureReport', Exec) {
    group = "verification"
    description = "Genera el reporte de Allure"

    dependsOn test

    doFirst {
        file("$buildDir/allure-results").mkdirs()
    }

    inputs.dir("$buildDir/allure-results")
    outputs.dir("$buildDir/reports/allure-report")

    commandLine "allure", "generate",
            "$buildDir/allure-results",
            "-o", "$buildDir/reports/allure-report",
            "--clean"
}
